{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","className","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imagenes","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC7CN,EAAc,OAKd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAiBnBG,UAAU,uB,uBCvBLC,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DACfC,EADe,iDACiCC,UACpDT,GAFmB,+DAIGU,MAAMF,GAJT,cAIfG,EAJe,gBAKEA,EAAUC,OALZ,uBAKbC,EALa,EAKbA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCaLO,EAXK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,yBAAKH,UAAU,8CACb,yBAAKiB,IAAKd,EAAKe,IAAKL,IACpB,2BAAIA,KCkBKM,EApBC,SAAC,GAAmB,IAAjBxB,EAAgB,EAAhBA,UAAgB,ECFP,SAACA,GAAe,IAAD,EACfR,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRtB,EAAQN,GAAW6B,MAAK,SAACb,GACvBW,EAAS,CACPd,KAAMG,EACNS,SAAS,SAGZ,CAACzB,IAEG0B,EDZ6BI,CAAa9B,GAAnC+B,EADmB,EACzBlB,KAAgBY,EADS,EACTA,QAExB,OACE,oCACE,4BAAKzB,GACJyB,GAAW,sCAEV,yBAAKpB,UAAU,aACZ0B,EAAShB,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEM3BiB,EAjBM,WAAO,IAAD,EACWzC,mBAAS,IADpB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG2C,EAAWnB,KAAI,SAACf,GAAD,OACd,kBAAC,EAAD,CAASA,UAAWA,EAAWgC,IAAKhC,U,MCT9CmC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.6337202f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((categoria) => [inputValue, ...categoria]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        className=\"indigo lighten-5\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","//optner los gif atraves de una api\r\nexport const getGifs = async (categoria) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=15&api_key=4Hlg5kdvpZ7JtxswAPz2GtQNBpkJ7zOA`;\r\n  const respuesta = await fetch(url);\r\n  const { data } = await respuesta.json();\r\n\r\n  //Obtener solo datos importantes de la api\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__zoomInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n  const { data: imagenes, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {loading && <p>Loading</p>}\r\n      {\r\n        <div className=\"card-grid\">\r\n          {imagenes.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert app</h2>\r\n      <AddCategory setCategorias={setCategorias} />\r\n      <hr />\r\n      <ol>\r\n        {categorias.map((categoria) => (\r\n          <GifGrid categoria={categoria} key={categoria} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}